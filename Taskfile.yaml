version: "3"

tasks:
  default:
    cmds:
      - task -l
  setup:
    desc: initialize project 
    deps: [build-dir, mocks]
  build-dir:
    internal: true
    dir: backend
    cmds: 
      - mkdir .build
    status:
      - test -d .build
  build:
    desc: compile the backend server application
    deps: [build-dir, templ, tailwind]
    dir: backend
    cmds:
      - go build -o .build/panda-game-server cmd/panda-game/main.go
    sources:
      - ./**/*.go
    generates:
      - .build/panda-game-server
  mocks:
    desc: generate mock implementations of interfaces
    dir: backend
    cmds:
      - mockery
    sources:
      - ./**/*.go
      - ./.mockery.yaml
    generates:
      - ./**/mock_*.go
  templ:
    desc: generate templ go files
    dir: backend
    cmds: 
      - templ generate
    sources:
      - ./**/*.templ
    generates:
      - ./**/*_templ.go
  tailwind-dump:
    desc: dump go-based tailwind classes to a file
    dir: backend/cmd/tailwinddump
    cmds: 
      - go run main.go >> tailwind.dump
      - mv tailwind.dump ../../../
    sources:
      - ./**/*.go
    generates:
      - ./tailwind.dump
  tailwind:
    desc: generate tailwind css
    deps: [tailwind-dump]
    cmds: 
      - tailwindcss -i ./backend/internal/htmx/style/input.css -o ./backend/internal/htmx/style/output.css --minify
    sources:
      - ./tailwind.config.js
      - ./**/*.templ
      - ./**/*.css
      - ./tailwind.dump
    generates: 
      - ./backend/internal/htmx/style/output.css
  unit-test:
    desc: run unit tests
    aliases: [ut, test]
    deps: [build-dir, mocks]
    dir: backend
    cmds:
      - go test ./... -v -coverprofile .build/cover.out
      - cat .build/cover.out | grep -v "mock_" > .build/cover_clean.out
    sources: 
      - ./**/*.go
    generates:
      - .build/cover.out
      - .build/cover_clean.out
  test-coverage:
    desc: display unit test coverage profile
    aliases: [utc, coverage]
    deps: [unit-test]
    dir: backend
    cmds:
      - covreport -i .build/cover_clean.out -o .build/cover.html
      - open .build/cover.html
  update-base-images:
    desc: pull latest base docker images
    cmds:
      - docker pull golang:alpine
      - docker pull alpine
  server-docker:
    desc: build docker image for game server
    deps: [templ, tailwind]
    cmds:
      - docker build -f docker/server.dockerfile -t panda-game-server:latest .
    sources:
      - backend/**/*.go
      - docker/server.dockerfile
  init-docker:
    desc: build init tool image
    cmds: 
      - docker build -f docker/init.dockerfile -t panda-nats-init:latest .
    sources:
      - backend/**/*.go
      - docker/init.dockerfile
  bot-docker:
    desc: build docker image for bot
    cmds:
      - docker build -f docker/bot.dockerfile -t panda-game-bot:latest .
    sources:
      - bot/bot.py
      - bot/requirements.txt
      - docker/bot.dockerfile
  run:
    desc: run the panda game locally
    dir: local
    cmd:
      - docker compose up --detach
  stop:
    desc: stop the panda game locally
    dir: local
    cmd:
      - docker compose down